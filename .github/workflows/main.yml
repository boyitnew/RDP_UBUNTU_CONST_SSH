name: SSH

on:
  workflow_dispatch:

jobs:
  secure-ssh:
    runs-on: ubuntu-latest
    timeout-minutes: 3600

    steps:
      - name: Configure SSH Settings
        run: |
          # Update package list
          sudo apt-get update
          
          # Install OpenSSH Server if not present
          sudo apt-get install -y openssh-server
          
          # Enable and start SSH service
          sudo systemctl enable ssh
          sudo systemctl start ssh
          
          # Configure SSH to allow password authentication
          sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
          
          # Restart SSH service to apply changes
          sudo systemctl restart ssh
          
          # Configure firewall to allow SSH (port 22)
          sudo ufw allow 22/tcp
          
          echo "SSH configured successfully"

      - name: Create SSH User with Fixed Password
        run: |
          # Set your fixed password here
          PASSWORD="*r96319631P-"
          
          # Create user with the fixed password
          sudo useradd -m -s /bin/bash SSH
          echo "SSH:$PASSWORD" | sudo chpasswd
          
          # Add user to sudo group for admin privileges
          sudo usermod -aG sudo SSH
          
          # Store credentials in environment
          echo "SSH_CREDS=User: SSH | Password: $PASSWORD" >> $GITHUB_ENV
          
          # Verify user creation
          if ! id "SSH" &>/dev/null; then
              echo "User creation failed"
              exit 1
          fi
          
          echo "User SSH created successfully"

      - name: Install Tailscale
        run: |
          # Add Tailscale's package signing key and repository
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.noarmor.gpg | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null
          curl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.tailscale-keyring.list | sudo tee /etc/apt/sources.list.d/tailscale.list
          
          # Install Tailscale
          sudo apt-get update
          sudo apt-get install -y tailscale
          
          echo "Tailscale installed successfully"

      - name: Establish Tailscale Connection
        run: |
          # Bring up Tailscale with the provided auth key and set a unique hostname
          sudo tailscale up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-runner-$GITHUB_RUN_ID
          
          # Wait for Tailscale to assign an IP
          TAILSCALE_IP=""
          RETRIES=0
          while [ -z "$TAILSCALE_IP" ] && [ $RETRIES -lt 10 ]; do
              TAILSCALE_IP=$(tailscale ip -4)
              sleep 5
              RETRIES=$((RETRIES + 1))
          done
          
          if [ -z "$TAILSCALE_IP" ]; then
              echo "Tailscale IP not assigned. Exiting."
              exit 1
          fi
          
          echo "TAILSCALE_IP=$TAILSCALE_IP" >> $GITHUB_ENV
          echo "Tailscale connected with IP: $TAILSCALE_IP"

      - name: Verify SSH Accessibility
        run: |
          echo "Tailscale IP: $TAILSCALE_IP"
          
          # Check if SSH service is running
          sudo systemctl status ssh --no-pager
          
          # Test SSH port locally
          if nc -zv localhost 22 2>&1 | grep -q succeeded; then
              echo "SSH port 22 is accessible"
          else
              echo "SSH port 22 is NOT accessible"
              exit 1
          fi
          
          echo "SSH connectivity verified successfully"

      - name: Maintain Connection
        run: |
          echo ""
          echo "=== SSH ACCESS ==="
          echo "Address: $TAILSCALE_IP"
          echo "Port: 22"
          echo "Username: SSH"
          echo "Password: *r96319631P-"
          echo "=================="
          echo ""
          echo "Connect using: ssh SSH@$TAILSCALE_IP"
          echo ""
          
          # Keep runner active indefinitely (or until manually cancelled)
          while true; do
              echo "[$(date)] SSH Active - Use 'Cancel workflow' button to terminate"
              sleep 300
          done
